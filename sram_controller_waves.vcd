$date
	Sun Aug 31 12:26:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_sram_controller $end
$var wire 1 ! ack_o $end
$var wire 16 " rdata_o [15:0] $end
$var wire 8 # sram_addr [7:0] $end
$var wire 1 $ sram_ce $end
$var wire 16 % sram_data [15:0] $end
$var wire 1 & sram_oe $end
$var wire 1 ' sram_we $end
$var reg 8 ( addr_i [7:0] $end
$var reg 1 ) clk $end
$var reg 1 * req_i $end
$var reg 1 + rst_n $end
$var reg 16 , wdata_i [15:0] $end
$var reg 1 - wr_en_i $end
$scope module dut $end
$var wire 8 . addr_i [7:0] $end
$var wire 1 / clk $end
$var wire 1 0 req_i $end
$var wire 1 1 rst_n $end
$var wire 16 2 sram_data_io [15:0] $end
$var wire 16 3 wdata_i [15:0] $end
$var wire 1 4 wr_en_i $end
$var reg 1 5 ack_o $end
$var reg 8 6 addr_reg [7:0] $end
$var reg 3 7 current_state [2:0] $end
$var reg 3 8 next_state [2:0] $end
$var reg 16 9 rdata_o [15:0] $end
$var reg 8 : sram_addr_o [7:0] $end
$var reg 1 ; sram_ce_o $end
$var reg 1 < sram_oe_o $end
$var reg 1 = sram_we_o $end
$var reg 16 > wdata_reg [15:0] $end
$upscope $end
$scope module sram_inst $end
$var wire 1 / clk $end
$var wire 1 1 rst_n $end
$var wire 8 ? sram_addr_i [7:0] $end
$var wire 1 $ sram_ce_i $end
$var wire 16 @ sram_data_io [15:0] $end
$var wire 1 & sram_oe_i $end
$var wire 1 ' sram_we_i $end
$upscope $end
$scope task read_mem $end
$var reg 8 A address [7:0] $end
$var reg 16 B expected_data [15:0] $end
$upscope $end
$scope task write_mem $end
$var reg 8 C address [7:0] $end
$var reg 16 D data [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx D
bx C
bx B
bx A
bz @
bx ?
bx >
0=
0<
0;
bx :
b0 9
b1 8
b1 7
bx 6
05
x4
bx 3
bz 2
01
00
0/
bx .
x-
bx ,
0+
0*
0)
bx (
0'
0&
bz %
0$
bx #
b0 "
0!
$end
#5000
1)
1/
#10000
0)
0/
#15000
1)
1/
#20000
0)
0/
1+
11
#25000
1)
1/
#30000
0)
0/
#35000
1)
1/
#40000
0)
0/
#45000
1)
1/
#50000
0)
0/
#55000
1)
1/
#60000
0)
0/
b1111101011001110 D
b10000 C
#65000
b10 8
b1111101011001110 ,
b1111101011001110 3
b10000 (
b10000 .
1-
14
1*
10
1)
1/
#70000
0)
0/
#75000
b1 8
15
1!
1=
1'
1;
1$
b10000 :
b10000 #
b10000 ?
b1111101011001110 %
b1111101011001110 2
b1111101011001110 @
b1111101011001110 >
b10000 6
b10 7
1)
1/
#80000
0)
0/
#85000
bz %
bz 2
bz @
0=
0'
0;
0$
05
0!
b1 7
0*
00
b1011111011101111 D
b10100101 C
1)
1/
#90000
0)
0/
#95000
b10 8
b1011111011101111 ,
b1011111011101111 3
b10100101 (
b10100101 .
1*
10
1)
1/
#100000
0)
0/
#105000
b1 8
15
1!
1=
1'
1;
1$
b10100101 :
b10100101 #
b10100101 ?
b1011111011101111 %
b1011111011101111 2
b1011111011101111 @
b1011111011101111 >
b10100101 6
b10 7
1)
1/
#110000
0)
0/
#115000
bz %
bz 2
bz @
0=
0'
0;
0$
05
0!
b1 7
0*
00
b1111101011001110 B
b10000 A
1)
1/
#120000
0)
0/
#125000
b11 8
b10000 (
b10000 .
0-
04
1*
10
1)
1/
#130000
0)
0/
#135000
b1111101011001110 %
b1111101011001110 2
b1111101011001110 @
b100 8
1<
1&
1;
1$
b10000 :
b10000 #
b10000 ?
b10000 6
b11 7
1)
1/
#140000
0)
0/
#145000
b101 8
1<
1&
1;
1$
b100 7
1)
1/
#150000
0)
0/
#155000
bz %
bz 2
bz @
b1 8
15
1!
0<
0&
0;
0$
b1111101011001110 9
b1111101011001110 "
b101 7
1)
1/
#160000
0)
0/
#165000
05
0!
b1 7
0*
00
b1011111011101111 B
b10100101 A
1)
1/
#170000
0)
0/
#175000
b11 8
b10100101 (
b10100101 .
1*
10
1)
1/
#180000
0)
0/
#185000
b1011111011101111 %
b1011111011101111 2
b1011111011101111 @
b100 8
1<
1&
1;
1$
b10100101 :
b10100101 #
b10100101 ?
b10100101 6
b11 7
1)
1/
#190000
0)
0/
#195000
b101 8
1<
1&
1;
1$
b100 7
1)
1/
#200000
0)
0/
#205000
bz %
bz 2
bz @
b1 8
15
1!
0<
0&
0;
0$
b1011111011101111 9
b1011111011101111 "
b101 7
1)
1/
#210000
0)
0/
#215000
05
0!
b1 7
0*
00
1)
1/
